using System;

namespace Exam_23June2019
{
    class Program
    {
        public static char[][] space;
        public static int stephenRow;
        public static int stephenCol;
        public static int energy = 0;
        public const int neededEnergy = 50;
        static void Main(string[] args)
        {
            int rows = int.Parse(Console.ReadLine());
            space = new char[rows][];
            Initialization();
            GettingPositions();

            while (energy < 50)
            {
                string command = Console.ReadLine();
                MoveStephen(command);
                CheckIfStarOrBlackHole();
            }

        }

        private static void CheckIfStarOrBlackHole()
        {
            if (space[stephenRow][stephenCol] == 'O')
            {
                space[stephenRow][stephenCol] = '-';
                for (int row = 0; row < space.GetLength(0); row++)
                {
                    for (int col = 0; col < space[row].Length; col++)
                    {
                        if (space[row][col] == 'O')
                        {
                            stephenRow = row;
                            stephenCol = col;
                            space[row][col] = 'S';
                        }
                    }
                }
            }
            else if (space[stephenRow][stephenCol] == '-')
            {
                space[stephenRow][stephenCol] = 'S';
            }
            else if (char.IsDigit(space[stephenRow][stephenCol]))
            {
                string points = (space[stephenRow][stephenCol]).ToString();
                energy += int.Parse(points);
                space[stephenRow][stephenCol] = 'S';
                if (energy >= neededEnergy)
                {
                    WinTheGame();
                }
            }
        }

        private static void WinTheGame()
        {
            Console.WriteLine("Good news! Stephen succeeded in collecting enough star power!");
            Console.WriteLine($"Star power collected: {energy}");
            PrintSpaceMatrix();
        }

        private static void MoveStephen(string command)
        {
            switch (command)
            {
                case "up":
                    if (stephenRow == 0)
                    {
                        WentToVoid();
                    }
                    else
                    {
                        space[stephenRow][stephenCol] = '-';
                        stephenRow--;
                    }
                    break;
                case "down":
                    if (stephenRow == space.Length - 1)
                    {
                        WentToVoid();
                    }
                    else
                    {
                        space[stephenRow][stephenCol] = '-';
                        stephenRow++;
                    }
                    break;
                case "left":
                    if (stephenCol == 0)
                    {
                        WentToVoid();
                    }
                    else
                    {
                        space[stephenRow][stephenCol] = '-';
                        stephenCol--;
                    }
                    break;
                case "right":
                    if (stephenCol == space.Length - 1)
                    {

                        WentToVoid();
                    }
                    else
                    {
                        space[stephenRow][stephenCol] = '-';
                        stephenCol++;
                    }
                    break;
            }
        }

        public static void WentToVoid()
        {
            space[stephenRow][stephenCol] = '-';
            Console.WriteLine("Bad news, the spaceship went to the void.");
            Console.WriteLine($"Star power collected: {energy}");
            PrintSpaceMatrix();
        }

        private static void PrintSpaceMatrix()
        {
            foreach (var row in space)
            {
                Console.WriteLine(row);
            }
            Environment.Exit(0);
        }

        private static void GettingPositions()
        {
            for (int row = 0; row < space.GetLength(0); row++)
            {
                for (int col = 0; col < space[row].Length; col++)
                {
                    if (space[row][col] == 'S')
                    {
                        stephenRow = row;
                        stephenCol = col;
                    }
                }
            }
        }

        private static void Initialization()
        {
            for (int i = 0; i < space.Length; i++)
            {
                char[] row = Console.ReadLine().ToCharArray();
                space[i] = row;
            }
        }
    }
}
